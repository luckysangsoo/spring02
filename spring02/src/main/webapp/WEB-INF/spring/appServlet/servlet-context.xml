<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- mapping : 가상 경로(상대경로)
	location : 리소스가 실제로 저장된 경로 -->
	<resources location="/WEB-INF/views/include/" 
		mapping="/include/**" />
	<resources location="/WEB-INF/views/images/" 
		mapping="/images/**" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 스프링에서 aop 설정을 통한 proxy 객체 생성 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- 스프링 빈을 태그로 등록하지 않고 자동으로 검색(auto scan) --> 
	<context:component-scan base-package="com.example.spring02" />
	
	<!-- 파일 업로드에 필요한 bean 설정 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일 업로드 최대 용량(byte) -->
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
	</beans:bean>
	<!-- 파일업로드를 위한 디렉토리 설정 -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="E:\upload" />
	</beans:bean>
	
	<!-- 인터셉터 설정 -->
	<beans:bean id="sampleInterceptor"
	class="com.example.spring02.interceptor.SampleInterceptor">
	</beans:bean>
	
	<beans:bean id="LoginInterceptor"
	 class="com.example.spring02.interceptor.LoginInterceptor">
	</beans:bean>
	
	<beans:bean id="adminInterceptor"
	 class="com.example.spring02.interceptor.AdminInterceptor">
	</beans:bean>
	
	<interceptors>
	    <!-- 관리자 세션 체크를 위한 인터셉터 설정 -->
	    <interceptor>
	    	<!-- <mapping path="/admin/login.do"/> login.do를 체크하면 아예 로그인을 하지 못한다.
	        <mapping path="/admin/login_Check.do"/>
	         --><mapping path="/shop/product/write.do"/>
	        <mapping path="/shop/product/insert.do"/>
	    	<beans:ref bean="adminInterceptor"/>
	    </interceptor>
		
		<interceptor>
			<mapping path="/board/write.do"/>
			<mapping path="/board/insert.do"/>
			<mapping path="/board/update.do"/>
			<mapping path="/board/delete.do"/>
			<mapping path="/shop/cart/insert.do"/>
			<mapping path="/shop/cart/list.do"/>
			<beans:ref bean="LoginInterceptor" />
		</interceptor>
	
		<interceptor>
			<mapping path="/doA"/>
			<mapping path="/doB"/>
			<!-- board 하위 url에 인터셉터 적용 -->
			<mapping path="/board/**"/>
			<beans:ref bean="sampleInterceptor" />
		</interceptor>
	</interceptors>
</beans:beans>
